// <auto-generated />
using System;
using CoreSBBL.Logging.Infrastructure.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CoreSBBL.Migrations
{
    [DbContext(typeof(LogsContext))]
    [Migration("20230603114244_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CoreSBBL.Logging.Models.LoggingDALEF", b =>
                {
                    b.Property<int>("EfId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EfId"));

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<int?>("LabelId")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.HasKey("EfId")
                        .HasName("Logging_Id");

                    b.HasIndex("LabelId");

                    b.ToTable("Logging", (string)null);
                });

            modelBuilder.Entity("CoreSBBL.Logging.Models.LoggingLabelDALEF", b =>
                {
                    b.Property<int>("EfId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EfId"));

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.HasKey("EfId")
                        .HasName("LoggingLabel_Id");

                    b.ToTable("LoggingLabel", (string)null);
                });

            modelBuilder.Entity("CoreSBBL.Logging.Models.LoggingTagDALEF", b =>
                {
                    b.Property<int>("EfId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EfId"));

                    b.Property<DateTime?>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Modified")
                        .HasColumnType("datetime2");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("index")
                        .HasColumnType("int");

                    b.HasKey("EfId")
                        .HasName("LoggingTags_Id");

                    b.ToTable("LoggingTags", (string)null);
                });

            modelBuilder.Entity("LoggingToTags", b =>
                {
                    b.Property<int>("LogId")
                        .HasColumnType("int");

                    b.Property<int>("TagsId")
                        .HasColumnType("int");

                    b.HasKey("LogId", "TagsId");

                    b.HasIndex("TagsId");

                    b.ToTable("LoggingToTags");
                });

            modelBuilder.Entity("CoreSBBL.Logging.Models.LoggingDALEF", b =>
                {
                    b.HasOne("CoreSBBL.Logging.Models.LoggingLabelDALEF", "Label")
                        .WithMany()
                        .HasForeignKey("LabelId");

                    b.Navigation("Label");
                });

            modelBuilder.Entity("LoggingToTags", b =>
                {
                    b.HasOne("CoreSBBL.Logging.Models.LoggingDALEF", null)
                        .WithMany()
                        .HasForeignKey("LogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CoreSBBL.Logging.Models.LoggingTagDALEF", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
